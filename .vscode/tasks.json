{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "Run MCP Server (Venv)",
      "type": "shell",
      "command": "pwsh.exe",
      "args": [
        "-NoProfile",
        "-ExecutionPolicy",
        "Bypass",
        "-File",
        "${workspaceFolder}/start-server.ps1"
      ],
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": []
    },
    {
      "label": "Run Tests",
      "type": "shell",
      "command": "pwsh.exe",
      "args": [
        "-NoProfile",
        "-ExecutionPolicy",
        "Bypass",
        "-File",
        "${workspaceFolder}/run_tests.ps1"
      ],
      "group": {
        "kind": "test",
        "isDefault": true
      },
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": []
    },
    {
      "label": "Run MCP Server with UV",
      "type": "shell",
      "command": "uv",
      "args": ["run", "${workspaceFolder}/server.py"],
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": []
    },
    {
      "label": "Setup Virtual Environment",
      "type": "shell",
      "command": "pwsh.exe",
      "args": [
        "-NoProfile",
        "-ExecutionPolicy",
        "Bypass",
        "-File",
        "${workspaceFolder}/install_deps.ps1"
      ],
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": []
    },
    {
      "label": "Activate Virtual Environment",
      "type": "shell",
      "command": "pwsh.exe",
      "args": [
        "-NoProfile",
        "-ExecutionPolicy",
        "Bypass",
        "-File",
        "${workspaceFolder}/activate.ps1"
      ],
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": []
    },
    {
      "label": "Format Code (Black)",
      "type": "shell",
      "command": "pwsh.exe",
      "args": [
        "-NoProfile",
        "-ExecutionPolicy",
        "Bypass",
        "-Command",
        "cd '${workspaceFolder}'; if (Test-Path '.venv/Scripts/black.exe') { .venv/Scripts/black.exe . } else { python -m black . }"
      ],
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "problemMatcher": []
    },
    {
      "label": "Lint Code (Flake8)",
      "type": "shell",
      "command": "pwsh.exe",
      "args": [
        "-NoProfile",
        "-ExecutionPolicy",
        "Bypass",
        "-Command",
        "cd '${workspaceFolder}'; if (Test-Path '.venv/Scripts/flake8.exe') { .venv/Scripts/flake8.exe . } else { python -m flake8 . }"
      ],
      "group": "test",
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "problemMatcher": [
        {
          "owner": "flake8",
          "fileLocation": "absolute",
          "pattern": {
            "regexp": "^(.*):(\\d+):(\\d+):\\s+(E\\d+|W\\d+|F\\d+)\\s+(.*)$",
            "file": 1,
            "line": 2,
            "column": 3,
            "code": 4,
            "message": 5
          }
        }
      ]
    },
    {
      "label": "Type Check (MyPy)",
      "type": "shell",
      "command": "pwsh.exe",
      "args": [
        "-NoProfile",
        "-ExecutionPolicy",
        "Bypass",
        "-Command",
        "cd '${workspaceFolder}'; if (Test-Path '.venv/Scripts/mypy.exe') { .venv/Scripts/mypy.exe . } else { python -m mypy . }"
      ],
      "group": "test",
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "problemMatcher": [
        {
          "owner": "mypy",
          "fileLocation": "absolute",
          "pattern": {
            "regexp": "^(.*):(\\d+):(\\d+):\\s+(error|warning|note):\\s+(.*)$",
            "file": 1,
            "line": 2,
            "column": 3,
            "severity": 4,
            "message": 5
          }
        }
      ]
    },
    {
      "label": "Run All Linting",
      "type": "shell",
      "command": "pwsh.exe",
      "args": [
        "-NoProfile",
        "-ExecutionPolicy",
        "Bypass",
        "-Command",
        "cd '${workspaceFolder}'; Write-Host 'Running Black formatter...'; if (Test-Path '.venv/Scripts/black.exe') { .venv/Scripts/black.exe . } else { python -m black . }; Write-Host 'Running Flake8 linter...'; if (Test-Path '.venv/Scripts/flake8.exe') { .venv/Scripts/flake8.exe . } else { python -m flake8 . }; Write-Host 'Running MyPy type checker...'; if (Test-Path '.venv/Scripts/mypy.exe') { .venv/Scripts/mypy.exe . } else { python -m mypy . }"
      ],
      "group": "test",
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "problemMatcher": [
        {
          "owner": "flake8",
          "fileLocation": "absolute",
          "pattern": {
            "regexp": "^(.*):(\\d+):(\\d+):\\s+(E\\d+|W\\d+|F\\d+)\\s+(.*)$",
            "file": 1,
            "line": 2,
            "column": 3,
            "code": 4,
            "message": 5
          }
        },
        {
          "owner": "mypy",
          "fileLocation": "absolute",
          "pattern": {
            "regexp": "^(.*):(\\d+):(\\d+):\\s+(error|warning|note):\\s+(.*)$",
            "file": 1,
            "line": 2,
            "column": 3,
            "severity": 4,
            "message": 5
          }
        }
      ]
    }
  ]
}
